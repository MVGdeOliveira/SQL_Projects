-- Script for Exercise 3.9.1

-- A table = customer
-- B table = address
-- C table = city
-- D table = country
-- E table = payment

-- create CTE
WITH avg_amount_cte (customer_id, first_name, last_name, city, country)
AS 
(SELECT 
	A.customer_id,
	A.first_name,
	A.last_name,
	C.city,
	D.country,
	SUM(E.amount) AS total_amount_paid
	FROM payment E
	-- data matching	
	INNER JOIN customer A ON A.customer_id = E.customer_id
	INNER JOIN address B ON A.address_id = B.address_id
	INNER JOIN city C ON B.city_id = C.city_id
	INNER JOIN country D ON C.country_id = D.country_id
	-- restricting the cities to the top 10 cities
	WHERE C.city IN (
		SELECT city
		FROM customer A
			INNER JOIN address B ON A.address_id = B.address_id
			INNER JOIN city C ON B.city_id = C.city_id
			INNER JOIN country D ON C.country_id = D.country_id
		-- restricting to the top 10 countries
		WHERE D.country IN 
			(SELECT D.country
				FROM customer A
					INNER JOIN address B ON A.address_id = B.address_id
					INNER JOIN city C ON B.city_id = C.city_id
					INNER JOIN country D ON C.country_id = D.country_id
			 GROUP BY D.country  
			 ORDER BY COUNT(A.customer_id) DESC
			 LIMIT 10
			)	
		GROUP BY D.country,
		         C.city
		ORDER BY COUNT(A.customer_id) DESC
		LIMIT 10
		)
-- organizing results
GROUP BY 
 	A.customer_id,
	A.first_name,
	A.last_name,
	C.city,
	D.country
ORDER BY total_amount_paid DESC
LIMIT 5
)
-- presenting results
SELECT AVG(total_amount_paid)
FROM avg_amount_cte
